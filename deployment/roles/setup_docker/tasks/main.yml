# Reset the Docker service
- name: Unmask Docker
  command: systemctl unmask docker

- name: Bounce Docker service
  systemd:
    name: docker
    state: restarted

# Delete old and dangling Docker data
- name: Prune everything
  docker_prune:
    containers: yes
    images: yes
    networks: yes
    volumes: yes
    builder_cache: yes

# Copy docker compose files
- name: Copy docker compose files
  copy:
    src: docker
    dest: "{{ ansible_env.HOME }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

# Take user inputs for custom values
- pause:
    prompt: "Which folder would you like to store your files in? [~/courselit-data]"
  register: prompt

- set_fact:
    media_folder: "{{ prompt.user_input if prompt.user_input|bool else '~/courselit-data' }}"

- pause:
    prompt: "Specify a username for the database. Keep it safe for future maintanences."
  register: prompt

- set_fact:
    mongo_user_name: "{{ prompt.user_input }}"

- pause:
    prompt: "Specify the password for the above user. Keep it safe for future maintanences."
  register: prompt

- set_fact:
    mongo_password: "{{ prompt.user_input }}"

- pause:
    prompt: "Specify a secret string which will be used to hash password. Keep it safe for future maintanences."
  register: prompt

- set_fact:
    jwt_secret: "{{ prompt.user_input }}"

# Copy the environment file to be used by docker-compose
- name: Copy the environment file
  template:
    src: .env.j2
    dest: $HOME/docker/.env

# Start the application
- name: Start CourseLit (without HTTPS)
  docker_compose:
    project_name: courselit
    project_src: "{{ ansible_env.HOME }}/docker"
    files:
        - "docker-compose.yml"
    build: no
    pull: yes
  register: output

# Schedule a backup cronjob
- name: Schedule an automatic backup job
  cron:
    name: "backup"
    minute: "0"
    hour: "7"
    job: "tar -cvz --exclude=**/diagnostic.data/* -f courselit-backup-`date +'%d%m%y'`.tar.gz {{ media_folder }} >> courselit-backup-`date +'%d%m%y'`.log"